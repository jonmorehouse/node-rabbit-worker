// Generated by CoffeeScript 1.6.3
(function() {
  var TaskHandler, stream,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  stream = require('stream');

  TaskHandler = (function(_super) {
    __extends(TaskHandler, _super);

    function TaskHandler() {
      TaskHandler.__super__.constructor.call(this, {
        objectMode: true
      });
      this.tasks = {};
    }

    TaskHandler.prototype._write = function(data, enc, cb) {
      if (typeof data === "object") {
        p("OBJECT");
      } else if (typeof data === "string") {
        p("STRING");
      } else {
        return cb(new Error("Invalid parameter"));
      }
      return typeof cb === "function" ? cb() : void 0;
    };

    return TaskHandler;

  })(stream.Writable);

  module.exports = TaskHandler;

}).call(this);
