// Generated by CoffeeScript 1.6.3
(function() {
  var Manager, stream,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  stream = require('stream');

  Manager = (function(_super) {
    __extends(Manager, _super);

    /*
      @opts = 
        queue
    */


    function Manager(opts) {
      this.opts = opts;
      Manager.__super__.constructor.apply(this, arguments);
    }

    Manager.prototype.close = function() {};

    Manager.prototype._read = function(size) {};

    Manager.prototype._write = function() {};

    return Manager;

  })(stream.Readable);

  module.exports = Manager;

}).call(this);
